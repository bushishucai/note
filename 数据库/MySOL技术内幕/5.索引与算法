InnoDB存储引擎索引概述
    B+ 树索引
        B+ 树索引并不能找到一个给定键值的具体行，而是找到数据行所在的页
        然后把页读入到内存，再在内存中进行查找到数据行
    全文索引
    哈希索引
数据结构与算法
    二叉查找树 > 平衡二叉树 > B 树 > B+ 树
    二叉查找树
        左子树的键值总是小于根的键值
        右子树的键值总是大于根的键值
    平衡二叉树
        符合二叉查找树的定义
        任何节点的两个子树的高度最大差为 1
B+ 树
    为磁盘设计的一种平衡查找树
    所有节点按键值顺序放在同一层的叶子节点上，由各叶子节点指针进行连接
B+ 树的插入与删除操作
    插入
    删除
B+ 树索引
    聚集索引
        实际的数据页只能按照一棵 B+ 树进行排序，因此每张表只能拥有一个聚集索引
        聚集索引的存储并不是物理上连续的，而是逻辑上连续的
        但是会通过以区为单位给段分配空间的方式，尽量保证记录物理上的连续
        页通过双向链表链接，页按照主键的顺序排序，页中的记录也是通过双向链表维护
    辅助索引
        叶子节点并不包含行记录的全部数据，但包含键值（聚簇索引）以及指向对应行数据的指针
Cardinality 值
    表示索引中不重复记录数量的预估值，用于查看索引是否是高选择性
B+ 树索引的使用
    








    