日志
    错误日志(error log)
    慢查询日志(slow query log)
    查询日志(log)
    二进制日志(binlog)
        恢复
        复制
        审计
套接字文件
    UNIX 系统下本地连接 MySQL 可以采用 UNIX 域套接字方式
pid 文件
    MySQL 实例启动时，会将自己的进程写入 pid 文件
表结构定义文件
InnoDB 存储引擎文件
    表空间文件
    重做日志文件
        大小设置
            设太大，恢复时间长
            设太小，频繁 checkpoint
        重做日志 vs 二进制日志
            二进制日志会记录所有与 MySQL 数据库有关的日志记录，包括其他存储引擎的日志
            重做日志只记录有关该存储引擎本身的事务日志
            二进制日志记录的是关于事务的逻辑日志
            重做日志记录的是关于每个页的更改的物理情况
            二进制日志文件仅在事务提交前进行提交，只写入磁盘一次
            重做日志在事务进行的过程中就会被写入磁盘
        写入过程
            重做日志缓冲的写入，是按 512 个字节（即一个扇区的大小）
            因为扇区是写入的最小单位，因此可以保证写入必定是成功的
            因此在重做日志的写人过程中不需要有 double write
        参数控制
            innodb_flush_log_at_commit
            0 提交事务时，不将事务的重做日志刷盘，等待主线程每秒的刷新（数据库挂了，会丢数据）
            1 提交事务时，将事务的重做日志同步刷盘，即伴有 fync 的调用（操作系统挂了，也不丢数据）
            2 提交事务时，将事务的重做日志异步刷盘，即写到操作系统缓存（操作系统挂了，会丢数据）
